/* include guard */
#ifndef __GD32VF1XX_HAL_RCU_H
#define __GD32VF1XX_HAL_RCU_H

#ifdef __cplusplus
extern "C" {
#endif

#include "gd32vf1xx_hal_def.h"

/* define absolute register bit position for ease-of-use by HAL library */
#define RCU_AHBEN_POS                   (0x14UL << FLAG_OFFSET)
#define RCU_AHBEN_DMA0EN_POSABS         (RCU_AHBEN_POS + RCU_AHBEN_DMA0EN_POS)
#define RCU_AHBEN_DMA1EN_POSABS         (RCU_AHBEN_POS + RCU_AHBEN_DMA1EN_POS)
#define RCU_AHBEN_CRCEN_POSABS          (RCU_AHBEN_POS + RCU_AHBEN_CRCEN_POS)
#define RCU_AHBEN_EXMCEN_POSABS         (RCU_AHBEN_POS + RCU_AHBEN_EXMCEN_POS)
#define RCU_AHBEN_USBFSEN_POSABS        (RCU_AHBEN_POS + RCU_AHBEN_USBFSEN_POS)

#define RCU_APB1EN_POS                  (0x1CUL << FLAG_OFFSET)
#define RCU_APB1EN_TIMER1EN_POSABS      (RCU_APB1EN_POS + RCU_APB1EN_TIMER1EN_POS)
#define RCU_APB1EN_TIMER2EN_POSABS      (RCU_APB1EN_POS + RCU_APB1EN_TIMER2EN_POS)
#define RCU_APB1EN_TIMER3EN_POSABS      (RCU_APB1EN_POS + RCU_APB1EN_TIMER3EN_POS)
#define RCU_APB1EN_TIMER4EN_POSABS      (RCU_APB1EN_POS + RCU_APB1EN_TIMER4EN_POS)
#define RCU_APB1EN_TIMER5EN_POSABS      (RCU_APB1EN_POS + RCU_APB1EN_TIMER5EN_POS)
#define RCU_APB1EN_TIMER6EN_POSABS      (RCU_APB1EN_POS + RCU_APB1EN_TIMER6EN_POS)
#define RCU_APB1EN_WWDGTEN_POSABS       (RCU_APB1EN_POS + RCU_APB1EN_WWDGTEN_POS)
#define RCU_APB1EN_SPI1EN_POSABS        (RCU_APB1EN_POS + RCU_APB1EN_SPI1EN_POS)
#define RCU_APB1EN_SPI2EN_POSABS        (RCU_APB1EN_POS + RCU_APB1EN_SPI2EN_POS)
#define RCU_APB1EN_USART1EN_POSABS      (RCU_APB1EN_POS + RCU_APB1EN_USART1EN_POS)
#define RCU_APB1EN_USART2EN_POSABS      (RCU_APB1EN_POS + RCU_APB1EN_USART2EN_POS)
#define RCU_APB1EN_UART3EN_POSABS       (RCU_APB1EN_POS + RCU_APB1EN_UART3EN_POS)
#define RCU_APB1EN_UART4EN_POSABS       (RCU_APB1EN_POS + RCU_APB1EN_UART4EN_POS)
#define RCU_APB1EN_I2C0EN_POSABS        (RCU_APB1EN_POS + RCU_APB1EN_I2C0EN_POS)
#define RCU_APB1EN_I2C1EN_POSABS        (RCU_APB1EN_POS + RCU_APB1EN_I2C1EN_POS)
#define RCU_APB1EN_CAN0EN_POSABS        (RCU_APB1EN_POS + RCU_APB1EN_CAN0EN_POS)
#define RCU_APB1EN_CAN1EN_POSABS        (RCU_APB1EN_POS + RCU_APB1EN_CAN1EN_POS)
#define RCU_APB1EN_BKPIEN_POSABS        (RCU_APB1EN_POS + RCU_APB1EN_BKPIEN_POS)
#define RCU_APB1EN_PMUEN_POSABS         (RCU_APB1EN_POS + RCU_APB1EN_PMUEN_POS)
#define RCU_APB1EN_DACEN_POSABS         (RCU_APB1EN_POS + RCU_APB1EN_DACEN_POS)

#define RCU_APB2EN_POS                  (0x18UL << FLAG_OFFSET)
#define RCU_APB2EN_AFEN_POSABS          (RCU_APB2EN_POS + RCU_APB2EN_AFEN_POS)
#define RCU_APB2EN_PAEN_POSABS          (RCU_APB2EN_POS + RCU_APB2EN_PAEN_POS)
#define RCU_APB2EN_PBEN_POSABS          (RCU_APB2EN_POS + RCU_APB2EN_PBEN_POS)
#define RCU_APB2EN_PCEN_POSABS          (RCU_APB2EN_POS + RCU_APB2EN_PCEN_POS)
#define RCU_APB2EN_PDEN_POSABS          (RCU_APB2EN_POS + RCU_APB2EN_PDEN_POS)
#define RCU_APB2EN_PEEN_POSABS          (RCU_APB2EN_POS + RCU_APB2EN_PEEN_POS)
#define RCU_APB2EN_ADC0EN_POSABS        (RCU_APB2EN_POS + RCU_APB2EN_ADC0EN_POS)
#define RCU_APB2EN_ADC1EN_POSABS        (RCU_APB2EN_POS + RCU_APB2EN_ADC1EN_POS)
#define RCU_APB2EN_TIMER0EN_POSABS      (RCU_APB2EN_POS + RCU_APB2EN_TIMER0EN_POS)
#define RCU_APB2EN_SPI0EN_POSABS        (RCU_APB2EN_POS + RCU_APB2EN_SPI0EN_POS)
#define RCU_APB2EN_USART0EN_POSABS      (RCU_APB2EN_POS + RCU_APB2EN_USART0EN_POS)

#define RCU_BDCTL_POS                   (0x20UL << FLAG_OFFSET)
#define RCU_BDCTL_RTCEN_POSABS          (RCU_BDCTL_POS + RCU_BDCTL_RTCEN_POS)


#define SEL_IRC8M       0x00U
#define SEL_HXTAL       0x01U
#define SEL_PLL         0x02U

/* PREDV0 input clock source selection */
#define RCU_PREDV0SRC_HXTAL             0x00000000UL             /*!< HXTAL selected as PREDV0 input source clock */
#define RCU_PREDV0SRC_CKPLL1            RCU_CFG1_PREDV0SEL_MSK              /** CK_PLL1 selected as PREDV0 input source clock */




#define RCU_USE_IRC8M                   (0b00UL << RCU_CFG0_SCS_POS)
#define RCU_USE_HXTAL                   (0b01UL << RCU_CFG0_SCS_POS)
#define RCU_USE_PLL                     (0b10UL << RCU_CFG0_SCS_POS)

#define RCU_PLL_USE_IRC8M               (0b0UL << RCU_CFG0_PLLSEL_POS)
#define RCU_PLL_USE_PREDV0              (0b1UL << RCU_CFG0_PLLSEL_POS)
#define RCU_PREDV0_USE_HXTAL            (0b0UL << RCU_CFG1_PREDV0SEL_POS)
#define RCU_PREDV0_USE_PLLMF1           (0b1UL << RCU_CFG1_PREDV0SEL_POS)

/* ADC prescaler select */
#define RCU_CKADC_CKAPB2_DIV2           ((0b0 << RCU_CFG0_ADCPSC_2_POS) | (0b00UL << RCU_CFG0_ADCPSC_1_0_POS))  /** ADC prescaler select CK_APB2 / 2 */
#define RCU_CKADC_CKAPB2_DIV4           ((0b0 << RCU_CFG0_ADCPSC_2_POS) | (0b01UL << RCU_CFG0_ADCPSC_1_0_POS))  /** ADC prescaler select CK_APB2 / 4 */
#define RCU_CKADC_CKAPB2_DIV6           ((0b0 << RCU_CFG0_ADCPSC_2_POS) | (0b10UL << RCU_CFG0_ADCPSC_1_0_POS))  /** ADC prescaler select CK_APB2 / 6 */
#define RCU_CKADC_CKAPB2_DIV8           ((0b0 << RCU_CFG0_ADCPSC_2_POS) | (0b11UL << RCU_CFG0_ADCPSC_1_0_POS))  /** ADC prescaler select CK_APB2 / 8 */
#define RCU_CKADC_CKAPB2_DIV12          ((0b1 << RCU_CFG0_ADCPSC_2_POS) | (0b01UL << RCU_CFG0_ADCPSC_1_0_POS))  /** ADC prescaler select CK_APB2 / 12 */
#define RCU_CKADC_CKAPB2_DIV16          ((0b1 << RCU_CFG0_ADCPSC_2_POS) | (0b11UL << RCU_CFG0_ADCPSC_1_0_POS))  /** ADC prescaler select CK_APB2 / 16 */


/* peripheral clock enable */
typedef enum {
	/* AHB peripherals */
	RCU_DMA0    = RCU_AHBEN_DMA0EN_POSABS,
	RCU_DMA1    = RCU_AHBEN_DMA1EN_POSABS,
	RCU_CRC     = RCU_AHBEN_CRCEN_POSABS,
	RCU_EXMC    = RCU_AHBEN_EXMCEN_POSABS,
	RCU_USBFS   = RCU_AHBEN_USBFSEN_POSABS,

	/* APB1 peripherals */
	RCU_TIMER1  = RCU_APB1EN_TIMER1EN_POSABS,
	RCU_TIMER2  = RCU_APB1EN_TIMER2EN_POSABS,
	RCU_TIMER3  = RCU_APB1EN_TIMER3EN_POSABS,
	RCU_TIMER4  = RCU_APB1EN_TIMER4EN_POSABS,
	RCU_TIMER5  = RCU_APB1EN_TIMER5EN_POSABS,
	RCU_TIMER6  = RCU_APB1EN_TIMER6EN_POSABS,
	RCU_WWDGT   = RCU_APB1EN_WWDGTEN_POSABS,
	RCU_SPI1    = RCU_APB1EN_SPI1EN_POSABS,
	RCU_SPI2    = RCU_APB1EN_SPI2EN_POSABS,
	RCU_USART1  = RCU_APB1EN_USART1EN_POSABS,
	RCU_USART2  = RCU_APB1EN_USART2EN_POSABS,
	RCU_UART3   = RCU_APB1EN_UART3EN_POSABS,
	RCU_UART4   = RCU_APB1EN_UART4EN_POSABS,
	RCU_I2C0    = RCU_APB1EN_I2C0EN_POSABS,
	RCU_I2C1    = RCU_APB1EN_I2C1EN_POSABS,
	RCU_CAN0    = RCU_APB1EN_CAN0EN_POSABS,
	RCU_CAN1    = RCU_APB1EN_CAN1EN_POSABS,
	RCU_BKPI    = RCU_APB1EN_BKPIEN_POSABS,
	RCU_PMU     = RCU_APB1EN_PMUEN_POSABS,
	RCU_DAC     = RCU_APB1EN_DACEN_POSABS,

	/* APB2 peripherals */
	RCU_AF      = RCU_APB2EN_AFEN_POSABS,
	RCU_GPIOA   = RCU_APB2EN_PAEN_POSABS,
	RCU_GPIOB   = RCU_APB2EN_PBEN_POSABS,
	RCU_GPIOC   = RCU_APB2EN_PCEN_POSABS,
	RCU_GPIOD   = RCU_APB2EN_PDEN_POSABS,
	RCU_GPIOE   = RCU_APB2EN_PEEN_POSABS,
	RCU_ADC0    = RCU_APB2EN_ADC0EN_POSABS,
	RCU_ADC1    = RCU_APB2EN_ADC1EN_POSABS,
	RCU_TIMER0  = RCU_APB2EN_TIMER0EN_POSABS,
	RCU_SPI0    = RCU_APB2EN_SPI0EN_POSABS,
	RCU_USART0  = RCU_APB2EN_USART0EN_POSABS,

	/* backup domain peripherals */
	RCU_RTC     = RCU_BDCTL_RTCEN_POSABS,
} RCU_Periph;


void HAL_RCU_enablePeriphClock(RCU_Periph periph);


void HAL_RCU_initDefaultSystemClock(void);

uint32_t HAL_RCU_getSysClockFreq(void);

uint32_t HAL_RCU_getAHBClockFreq(void);

uint32_t HAL_RCU_getAPB1ClockFreq(void);

uint32_t HAL_RCU_getAPB2ClockFreq(void);

void HAL_RCU_configADCClock(uint32_t value);


#ifdef __cplusplus
}
#endif

#endif  // __GD32VF1XX_HAL_RCU_H
